/*
   Fundacion Kinal
   Centro educativo tecnico laboral Kinal
   Quinto perito
   Quinto electronica
   Codigo Tecnico: EB5AM / EB5AV 
   Curso: Taller de electronica digital y reparacion de computadoras I
   Proyecto: Parte 2
   Alexander Daniel Gonz치lez V치squez
   Fecha: 07 de mayo
*/

#include <Wire.h>               
#include <LiquidCrystal_I2C.h>  
#include <Servo.h>              
#include <Keypad.h>           

#define direccion_lcd 0x20     
#define filas 2                
#define columnas 16            

#define filas_teclado 4        
#define columnas_teclado 4     

char keys[filas_teclado][columnas_teclado] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};

byte pines_filas[filas_teclado] = {A0, A1, A2, A3};
byte pines_columnas[columnas_teclado] = {7, 6, 5, 4};

const int lock_pos = 0;             
const int unlock_pos = 90;     

String contrasenaCerradura = "1087*";   
String info_recibida = ""; 

byte pos_lcd = 0; 

LiquidCrystal_I2C lcdCerradura(direccion_lcd, columnas, filas);   
Servo ServoCerradura;                                             
Keypad tecladoCerradura = Keypad( makeKeymap(keys), pines_filas, pines_columnas, filas_teclado,columnas_teclado);

void config_outputs(void);

void config_HMI(void);

void setup()
{
  Serial.begin(9600);             
  Serial.println("Practica 6");   
  config_outputs();               
  config_HMI();                   
  digitalWrite(10, HIGH);                  
  digitalWrite(12, HIGH);                   
  digitalWrite(11, LOW);                
  ServoCerradura.write(0);

}

void loop()
{
  //Obtengo el valor de la tecla presionada
  char key= tecladoCerradura.getKey(); 
  
  if(key)
  {
    
    info_recibida = info_recibida + key;
    Serial.println(key);
    lcdCerradura.setCursor(pos_lcd,1);
    lcdCerradura.print("*         ");
    pos_lcd++;
    if(key == '*')
    {
      lcdCerradura.setCursor(0,1);
      lcdCerradura.print("               ");
      Serial.println(info_recibida);
      if(info_recibida == contrasenaCerradura)
      {
        lcdCerradura.setCursor(0,1);
        lcdCerradura.print("Contrasena correcta");
        ServoCerradura.write(90);
        delay(1000);
        ServoCerradura.write(0);
        lcdCerradura.setCursor(0,1);
        lcdCerradura.print("P.Abierta          ");
        digitalWrite(11, HIGH); 
        digitalWrite(12, LOW); 
        Serial.println("Contrase침a correcta");
      }
      else
      {
        lcdCerradura.setCursor(0,1);
        lcdCerradura.print("Contrasena inco");
        delay(1000);
        lcdCerradura.setCursor(0,1);
        lcdCerradura.print("P.Cerrada      ");
        digitalWrite(11, LOW);
        digitalWrite(12, HIGH); 
        Serial.println("Contrase침a incorrecta");
        ServoCerradura.write(0);
      }
      info_recibida = "";     
      delay(1000);
      lcdCerradura.setCursor(0,1);
      lcdCerradura.print("P.Cerrada      ");
      pos_lcd = 0;
      digitalWrite(12, HIGH); 
      digitalWrite(12, LOW);
      ServoCerradura.write(0);
    }
  }

}

void config_outputs(void)
{
  pinMode(13, OUTPUT);
  pinMode(9, OUTPUT);
  pinMode(10, OUTPUT);
  pinMode(12, OUTPUT);
  pinMode(11, OUTPUT);
}

void config_HMI(void)
{
  ServoCerradura.attach(13);
  lcdCerradura.init();
  lcdCerradura.backlight();
  lcdCerradura.setCursor(2,0);
  lcdCerradura.print("Bienvenidos");
  lcdCerradura.setCursor(0,1);
  lcdCerradura.print("P.Cerrada      ");
}
